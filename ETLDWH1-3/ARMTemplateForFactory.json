{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ETLDWH1-3"
		},
		"BankMarketBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BankMarketBlob'"
		},
		"ConnectorAzureRafael_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ConnectorAzureRafael'"
		},
		"Dimensionality_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Dimensionality'"
		},
		"bankMarketDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'bankMarketDatabase'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Fact_Ordenes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PP_Ordenes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Ordenes_workflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TbOrdenes": {},
									"ModoEnvio": {},
									"Regiones": {},
									"TipoEnvio": {},
									"MapCliente": {},
									"StoreTable": {},
									"Garbage": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "PP_Detalledeordenes",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PP_Ordenes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Detalledeordenes_workflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ExTLdetallesdeordenes": {},
									"Almacenarproducto": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Coarse"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ETL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Ordenes_workflow')]",
				"[concat(variables('factoryId'), '/dataflows/Detalledeordenes_workflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PP_Metas",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Target_Workflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ExtTargetTable": {},
									"AlmacenarMetasDWH": {},
									"Orphans": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Coarse"
						}
					},
					{
						"name": "StagginCustomerData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['Cliente ID']"
										},
										"sink": {
											"name": "Cliente ID"
										}
									},
									{
										"source": {
											"path": "$['Nombre']"
										},
										"sink": {
											"name": "Nombre"
										}
									},
									{
										"source": {
											"path": "$['Apellido']"
										},
										"sink": {
											"name": "Apellido"
										}
									},
									{
										"source": {
											"path": "$['Segmento']"
										},
										"sink": {
											"name": "Segmento"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "LT_customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LT_Customer_Tra",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "PP_Customer",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "StagginCustomerData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Custormer_workflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TransformedCustomer": {},
									"ExtratedCustomer": {},
									"StoreDWHCustomer": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "PP_Producto",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Product_workflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ExtLTProduct": {},
									"ExtLTProductSubcategory": {},
									"ExtLTCategory": {},
									"AlmacenarProducto": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "TipoDeEnvioTransform",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Delete from TipoEnvio",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['@id_tipo']"
										},
										"sink": {
											"name": "id_tipo"
										}
									},
									{
										"source": {
											"path": "[['@Descripción']"
										},
										"sink": {
											"name": "Descripción"
										}
									}
								],
								"collectionReference": "$['Data']['table_maestria.tb_tipo_envio']['maestria.tb_tipo_envio']"
							}
						},
						"inputs": [
							{
								"referenceName": "tb_tipo_envio",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "tb_tipo_envio_Tra",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ModoDeEnvioTransform",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from ModoEnvio",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['@id_modo']"
										},
										"sink": {
											"name": "id_modo"
										}
									},
									{
										"source": {
											"path": "[['@Descripcion']"
										},
										"sink": {
											"name": "Descripcion"
										}
									},
									{
										"source": {
											"path": "[['@Tipo_x0020_ID']"
										},
										"sink": {
											"name": "id_TipoEnvio"
										}
									}
								],
								"collectionReference": "$['Data']['table_maestria.tb_modo_envio']['maestria.tb_modo_envio']"
							}
						},
						"inputs": [
							{
								"referenceName": "tb_modo_envio",
								"type": "DatasetReference",
								"parameters": {
									"id_modo": "id_modo",
									"Descripcion": "Descripcion",
									"Tipo_x0020_ID": "Descripcion"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "tb_Modo_Envio_Tra",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ETL"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-23T04:18:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Target_Workflow')]",
				"[concat(variables('factoryId'), '/datasets/LT_customer')]",
				"[concat(variables('factoryId'), '/datasets/LT_Customer_Tra')]",
				"[concat(variables('factoryId'), '/dataflows/Custormer_workflow')]",
				"[concat(variables('factoryId'), '/dataflows/Product_workflow')]",
				"[concat(variables('factoryId'), '/datasets/tb_tipo_envio')]",
				"[concat(variables('factoryId'), '/datasets/tb_tipo_envio_Tra')]",
				"[concat(variables('factoryId'), '/datasets/tb_modo_envio')]",
				"[concat(variables('factoryId'), '/datasets/tb_Modo_Envio_Tra')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tests')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PP_Detalledeordenes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Detalledeordenes_workflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ExTLdetallesdeordenes": {},
									"Almacenarproducto": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Coarse"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ETL"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-23T04:50:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Detalledeordenes_workflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimCliente')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ConnectorAzureRafael",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PK_Cliente",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Cliente_ID",
						"type": "varchar"
					},
					{
						"name": "Nombre",
						"type": "varchar"
					},
					{
						"name": "Apellido",
						"type": "varchar"
					},
					{
						"name": "Segmento",
						"type": "varchar"
					},
					{
						"name": "Pais",
						"type": "varchar"
					},
					{
						"name": "Ciudad",
						"type": "varchar"
					},
					{
						"name": "Estado",
						"type": "varchar"
					},
					{
						"name": "Region",
						"type": "varchar"
					},
					{
						"name": "Codigo Postal",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_Cliente"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ConnectorAzureRafael')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimDetalleOrdenes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ConnectorAzureRafael",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PK_DetalleOrden",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PK_Order",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Detalle_Orden",
						"type": "varchar"
					},
					{
						"name": "Linea_Total",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Cantidad",
						"type": "decimal",
						"precision": 18,
						"scale": 5
					},
					{
						"name": "Descuento",
						"type": "decimal",
						"precision": 5,
						"scale": 5
					},
					{
						"name": "Precio_Unitario",
						"type": "decimal",
						"precision": 18,
						"scale": 5
					},
					{
						"name": "Ganancia",
						"type": "decimal",
						"precision": 18,
						"scale": 5
					},
					{
						"name": "PK_Producto",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_detalle_ordenes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ConnectorAzureRafael')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimMetas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ConnectorAzureRafael",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PK_Meta",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Año",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Mes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Region_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TARGET",
						"type": "decimal",
						"precision": 18,
						"scale": 5
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_Metas"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ConnectorAzureRafael')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimProducto')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ConnectorAzureRafael",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PK_Producto",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Producto_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Descripcion_Subcategoria",
						"type": "varchar"
					},
					{
						"name": "Numero_Producto",
						"type": "varchar"
					},
					{
						"name": "Categoria_ID",
						"type": "varchar"
					},
					{
						"name": "Nombre_Producto",
						"type": "varchar"
					},
					{
						"name": "Descripcion_Categoria",
						"type": "varchar"
					},
					{
						"name": "Subcategoria_ID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_Producto"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ConnectorAzureRafael')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactOrdenes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ConnectorAzureRafael",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PK_Order",
						"type": "int",
						"precision": 10
					},
					{
						"name": "num_order",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fec_orden",
						"type": "date"
					},
					{
						"name": "fec_envio",
						"type": "date"
					},
					{
						"name": "imp_subtotal",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "id_modo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "modo_envio",
						"type": "varchar"
					},
					{
						"name": "ID_Tipo_envio",
						"type": "int",
						"precision": 10
					},
					{
						"name": "descripcion_envio",
						"type": "varchar"
					},
					{
						"name": "Region_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Region_descripcion",
						"type": "varchar"
					},
					{
						"name": "Detalle_Region",
						"type": "varchar"
					},
					{
						"name": "PK_Cliente",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FACT_Ordenes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ConnectorAzureRafael')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Garbage_Ordenes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dimensionality",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Garbage"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PK_Order",
						"type": "varchar"
					},
					{
						"name": "num_order",
						"type": "varchar"
					},
					{
						"name": "fec_orden",
						"type": "varchar"
					},
					{
						"name": "fec_envio",
						"type": "varchar"
					},
					{
						"name": "imp_subtotal",
						"type": "varchar"
					},
					{
						"name": "id_modo",
						"type": "varchar"
					},
					{
						"name": "modo_envio",
						"type": "varchar"
					},
					{
						"name": "ID_Tipo_envio",
						"type": "varchar"
					},
					{
						"name": "descripcion_envio",
						"type": "varchar"
					},
					{
						"name": "Region_ID",
						"type": "varchar"
					},
					{
						"name": "Region_descripcion",
						"type": "varchar"
					},
					{
						"name": "Detalle_Region",
						"type": "varchar"
					},
					{
						"name": "PK_Cliente",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Garbage_Ordenes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dimensionality')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LTDetalleOrdenes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bankMarketDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BankMarketDatabase"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Detalle Orden",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Numero Orden",
						"type": "varchar"
					},
					{
						"name": "Producto ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Linea Total",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Cantidad",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Descuento",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Precio Unitario",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Ganancia",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "maestria",
					"table": "LT_detalle_ordenes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bankMarketDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LT_Customer_Tra')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BankMarketBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BankMarketTransform"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "LT_customer.csv",
						"container": "transform"
					},
					"columnDelimiter": ",",
					"encodingName": "ISO-8859-1",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Cliente ID",
						"type": "String"
					},
					{
						"name": "Nombre",
						"type": "String"
					},
					{
						"name": "Apellido",
						"type": "String"
					},
					{
						"name": "Segmento",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BankMarketBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LT_customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BankMarketBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BankMarketSource"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "LT_customer.json",
						"container": "files"
					},
					"encodingName": "ISO-8859-1"
				},
				"schema": {
					"type": "object",
					"properties": {
						"Cliente ID": {
							"type": "string"
						},
						"Nombre": {
							"type": "string"
						},
						"Apellido": {
							"type": "string"
						},
						"Segmento": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BankMarketBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LT_productos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BankMarketBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BankMarketSource"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "LT_productos.csv",
						"container": "files"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Producto ID",
						"type": "String"
					},
					{
						"name": "Numero Producto",
						"type": "String"
					},
					{
						"name": "Producto Sub Categoria ID",
						"type": "String"
					},
					{
						"name": "Nombre Producto",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BankMarketBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LT_productos_categoria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BankMarketBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BankMarketSource"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "LT_productos_categoria.csv",
						"container": "files"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Categoria Producto ID",
						"type": "String"
					},
					{
						"name": "Descripcion Categoria",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BankMarketBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LT_productos_sub_categoria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BankMarketBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BankMarketSource"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "LT_productos_sub_categoria.csv",
						"container": "files"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Subcategoria Producto ID",
						"type": "String"
					},
					{
						"name": "Categoria Producto ID",
						"type": "String"
					},
					{
						"name": "Descripcion Subcategoria",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BankMarketBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Regiones')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BankMarketBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BankMarketSource"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Regiones.txt",
						"container": "files"
					},
					"columnDelimiter": "\t",
					"encodingName": "ISO-8859-1",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Region ID",
						"type": "String"
					},
					{
						"name": "Region Desc",
						"type": "String"
					},
					{
						"name": "Detalle region",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BankMarketBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TbDetalleEnvios')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bankMarketDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BankMarketDatabase"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "num_order",
						"type": "varchar"
					},
					{
						"name": "fec_orden",
						"type": "date"
					},
					{
						"name": "fec_envio",
						"type": "date"
					},
					{
						"name": "modo_envio",
						"type": "varchar"
					},
					{
						"name": "cliente_id",
						"type": "varchar"
					},
					{
						"name": "imp_subtotal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "region_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "maestria",
					"table": "tb_detalle_envios"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bankMarketDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_target_region')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BankMarketBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BankMarketSource"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "db_target_region.csv",
						"container": "files"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "null",
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Año",
						"type": "String"
					},
					{
						"name": "Mes",
						"type": "String"
					},
					{
						"name": "Region ID",
						"type": "String"
					},
					{
						"name": "Target",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BankMarketBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lt_customer_localizacion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BankMarketBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BankMarketSource"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "lt_customer_localizacion.csv",
						"container": "files"
					},
					"columnDelimiter": "\t",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Cliente ID",
						"type": "String"
					},
					{
						"name": "Pais",
						"type": "String"
					},
					{
						"name": "Ciudad",
						"type": "String"
					},
					{
						"name": "Estado",
						"type": "String"
					},
					{
						"name": "Codigo Postal",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BankMarketBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tb_Modo_Envio_Tra')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dimensionality",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BankMarketTransform"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_modo",
						"type": "varchar"
					},
					{
						"name": "Descripcion",
						"type": "varchar"
					},
					{
						"name": "id_TipoEnvio",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ModoEnvio"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dimensionality')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tb_modo_envio')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BankMarketBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"id_modo": {
						"type": "int"
					},
					"Descripcion": {
						"type": "string"
					},
					"Tipo_x0020_ID": {
						"type": "int"
					}
				},
				"folder": {
					"name": "BankMarketSource"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "tb_modo_envio.xml",
						"container": "files"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BankMarketBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tb_tipo_envio')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BankMarketBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BankMarketSource"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "tb_tipo_envio.xml",
						"container": "files"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BankMarketBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tb_tipo_envio_Tra')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dimensionality",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BankMarketTransform"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_tipo",
						"type": "varchar"
					},
					{
						"name": "Descripción",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TipoEnvio"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dimensionality')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BankMarketBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BankMarketBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConnectorAzureRafael')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ConnectorAzureRafael_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dimensionality')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Dimensionality_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bankMarketDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('bankMarketDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Custormer_workflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "LT_Customer_Tra",
								"type": "DatasetReference"
							},
							"name": "TransformedCustomer"
						},
						{
							"dataset": {
								"referenceName": "lt_customer_localizacion",
								"type": "DatasetReference"
							},
							"name": "ExtratedCustomer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimCliente",
								"type": "DatasetReference"
							},
							"name": "StoreDWHCustomer"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "DataToStore"
						},
						{
							"name": "SurrogateKeyCliente"
						}
					],
					"script": "source(output(\n\t\t{Cliente ID} as string,\n\t\tNombre as string,\n\t\tApellido as string,\n\t\tSegmento as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> TransformedCustomer\nsource(output(\n\t\t{Cliente ID} as string,\n\t\tPais as string,\n\t\tCiudad as string,\n\t\tEstado as string,\n\t\t{Codigo Postal} as string,\n\t\tRegion as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExtratedCustomer\nTransformedCustomer, ExtratedCustomer join(TransformedCustomer@{Cliente ID} == ExtratedCustomer@{Cliente ID},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\t{Cliente ID} = TransformedCustomer@{Cliente ID},\n\t\tNombre,\n\t\tApellido,\n\t\tSegmento,\n\t\tPais,\n\t\tCiudad,\n\t\tEstado,\n\t\t{Codigo Postal},\n\t\tRegion\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DataToStore\nDataToStore keyGenerate(output(Pk_Cliente as long),\n\tstartAt: 1L) ~> SurrogateKeyCliente\nSurrogateKeyCliente sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tPK_Cliente as integer,\n\t\tCliente_ID as string,\n\t\tNombre as string,\n\t\tApellido as string,\n\t\tSegmento as string,\n\t\tPais as string,\n\t\tCiudad as string,\n\t\tEstado as string,\n\t\tRegion as string,\n\t\t{Codigo Postal} as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['delete from [DIM_Cliente]'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tPK_Cliente = Pk_Cliente,\n\t\tCliente_ID = {Cliente ID},\n\t\tNombre,\n\t\tApellido,\n\t\tSegmento,\n\t\tPais,\n\t\tCiudad,\n\t\tEstado,\n\t\tRegion,\n\t\t{Codigo Postal}\n\t)) ~> StoreDWHCustomer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LT_Customer_Tra')]",
				"[concat(variables('factoryId'), '/datasets/lt_customer_localizacion')]",
				"[concat(variables('factoryId'), '/datasets/DimCliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Detalledeordenes_workflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "LTDetalleOrdenes",
								"type": "DatasetReference"
							},
							"name": "ExTLdetallesdeordenes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimDetalleOrdenes",
								"type": "DatasetReference"
							},
							"name": "Almacenarproducto"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "SurrogateKey1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Filter2"
						}
					],
					"script": "source(output(\n\t\t{Detalle Orden} as integer,\n\t\t{Numero Orden} as string,\n\t\t{Producto ID} as integer,\n\t\t{Linea Total} as double,\n\t\tCantidad as integer,\n\t\tDescuento as double,\n\t\t{Precio Unitario} as double,\n\t\tGanancia as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tlimit: 100,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ExTLdetallesdeordenes\nExTLdetallesdeordenes select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 keyGenerate(output(PK_detalledeordenes as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 filter(1==1) ~> Filter1\nSurrogateKey1 filter(!isNull(Descuento)) ~> Filter2\nFilter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tinput(\n\t\tPK_DetalleOrden as integer,\n\t\tPK_Order as integer,\n\t\tDetalle_Orden as string,\n\t\tLinea_Total as double,\n\t\tCantidad as decimal(18,5),\n\t\tDescuento as decimal(5,5),\n\t\tPrecio_Unitario as decimal(18,5),\n\t\tGanancia as decimal(18,5),\n\t\tPK_Producto as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> Almacenarproducto"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LTDetalleOrdenes')]",
				"[concat(variables('factoryId'), '/datasets/DimDetalleOrdenes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ordenes_workflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TbDetalleEnvios",
								"type": "DatasetReference"
							},
							"name": "TbOrdenes"
						},
						{
							"dataset": {
								"referenceName": "tb_Modo_Envio_Tra",
								"type": "DatasetReference"
							},
							"name": "ModoEnvio"
						},
						{
							"dataset": {
								"referenceName": "Regiones",
								"type": "DatasetReference"
							},
							"name": "Regiones"
						},
						{
							"dataset": {
								"referenceName": "tb_tipo_envio_Tra",
								"type": "DatasetReference"
							},
							"name": "TipoEnvio"
						},
						{
							"dataset": {
								"referenceName": "DimCliente",
								"type": "DatasetReference"
							},
							"name": "MapCliente"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "FactOrdenes",
								"type": "DatasetReference"
							},
							"name": "StoreTable"
						},
						{
							"dataset": {
								"referenceName": "Garbage_Ordenes",
								"type": "DatasetReference"
							},
							"name": "Garbage"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Join2"
						},
						{
							"name": "Join3"
						},
						{
							"name": "SelectDataCliente"
						},
						{
							"name": "Join4"
						},
						{
							"name": "SurrogateKey1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Filter2"
						}
					],
					"script": "source(output(\n\t\tnum_order as string,\n\t\tfec_orden as date,\n\t\tfec_envio as date,\n\t\tmodo_envio as string,\n\t\tcliente_id as string,\n\t\timp_subtotal as double,\n\t\tregion_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TbOrdenes\nsource(output(\n\t\tid_modo as string,\n\t\tDescripcion as string,\n\t\tid_TipoEnvio as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ModoEnvio\nsource(output(\n\t\t{Region ID} as integer,\n\t\t{Region Desc} as string,\n\t\t{Detalle region} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Regiones\nsource(output(\n\t\tid_tipo as string,\n\t\t{Descripción} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TipoEnvio\nsource(output(\n\t\tPK_Cliente as integer,\n\t\tCliente_ID as string,\n\t\tNombre as string,\n\t\tApellido as string,\n\t\tSegmento as string,\n\t\tPais as string,\n\t\tCiudad as string,\n\t\tEstado as string,\n\t\tRegion as string,\n\t\t{Codigo Postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> MapCliente\nJoin2, ModoEnvio join(modo_envio == id_modo,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin3 select(mapColumn(\n\t\tnum_order,\n\t\tfec_orden,\n\t\tfec_envio,\n\t\tid_modo_envio = modo_envio,\n\t\tcliente_id,\n\t\timp_subtotal,\n\t\tregion_id,\n\t\t{Region Desc},\n\t\t{Detalle region},\n\t\tmodo_envio = Descripcion,\n\t\tid_Tipo_Envio = id_TipoEnvio,\n\t\tTipo_envio = {Descripción}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nTbOrdenes, Regiones join(region_id == {Region ID},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin1, TipoEnvio join(id_TipoEnvio == id_tipo,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join3\nMapCliente select(mapColumn(\n\t\tPK_Cliente,\n\t\tCliente_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDataCliente\nSelect1, SelectDataCliente join(Select1@cliente_id == SelectDataCliente@Cliente_ID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join4\nJoin4 keyGenerate(output(PK_Ordenes as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 filter(!isNull(PK_Cliente) && fec_orden<fec_envio && !isNull(imp_subtotal)) ~> Filter1\nSurrogateKey1 filter(isNull(PK_Cliente) || fec_orden>fec_envio || isNull(imp_subtotal)) ~> Filter2\nFilter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tPK_Order as integer,\n\t\tnum_order as integer,\n\t\tfec_orden as date,\n\t\tfec_envio as date,\n\t\timp_subtotal as decimal(18,2),\n\t\tid_modo as integer,\n\t\tmodo_envio as string,\n\t\tID_Tipo_envio as integer,\n\t\tdescripcion_envio as string,\n\t\tRegion_ID as integer,\n\t\tRegion_descripcion as string,\n\t\tDetalle_Region as string,\n\t\tPK_Cliente as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['Delete from FACT_Ordenes;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tPK_Order = PK_Ordenes,\n\t\tnum_order,\n\t\tfec_orden,\n\t\tfec_envio,\n\t\timp_subtotal,\n\t\tid_modo = id_modo_envio,\n\t\tmodo_envio,\n\t\tID_Tipo_envio = id_Tipo_Envio,\n\t\tdescripcion_envio = Tipo_envio,\n\t\tRegion_ID = region_id,\n\t\tRegion_descripcion = {Region Desc},\n\t\tDetalle_Region = {Detalle region},\n\t\tPK_Cliente\n\t)) ~> StoreTable\nFilter2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tPK_Order as string,\n\t\tnum_order as string,\n\t\tfec_orden as string,\n\t\tfec_envio as string,\n\t\timp_subtotal as string,\n\t\tid_modo as string,\n\t\tmodo_envio as string,\n\t\tID_Tipo_envio as string,\n\t\tdescripcion_envio as string,\n\t\tRegion_ID as string,\n\t\tRegion_descripcion as string,\n\t\tDetalle_Region as string,\n\t\tPK_Cliente as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['delete from Garbage_Ordenes;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> Garbage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TbDetalleEnvios')]",
				"[concat(variables('factoryId'), '/datasets/tb_Modo_Envio_Tra')]",
				"[concat(variables('factoryId'), '/datasets/Regiones')]",
				"[concat(variables('factoryId'), '/datasets/tb_tipo_envio_Tra')]",
				"[concat(variables('factoryId'), '/datasets/DimCliente')]",
				"[concat(variables('factoryId'), '/datasets/FactOrdenes')]",
				"[concat(variables('factoryId'), '/datasets/Garbage_Ordenes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Product_workflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "LT_productos",
								"type": "DatasetReference"
							},
							"name": "ExtLTProduct"
						},
						{
							"dataset": {
								"referenceName": "LT_productos_sub_categoria",
								"type": "DatasetReference"
							},
							"name": "ExtLTProductSubcategory"
						},
						{
							"dataset": {
								"referenceName": "LT_productos_categoria",
								"type": "DatasetReference"
							},
							"name": "ExtLTCategory"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimProducto",
								"type": "DatasetReference"
							},
							"name": "AlmacenarProducto"
						}
					],
					"transformations": [
						{
							"name": "JoinSubcategory"
						},
						{
							"name": "JoinCategory"
						},
						{
							"name": "Select1"
						},
						{
							"name": "SurrogateKey1"
						}
					],
					"script": "source(output(\n\t\t{Producto ID} as string,\n\t\t{Numero Producto} as string,\n\t\t{Producto Sub Categoria ID} as string,\n\t\t{Nombre Producto} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false) ~> ExtLTProduct\nsource(output(\n\t\t{Subcategoria Producto ID} as string,\n\t\t{Categoria Producto ID} as string,\n\t\t{Descripcion Subcategoria} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false) ~> ExtLTProductSubcategory\nsource(output(\n\t\t{Categoria Producto ID} as string,\n\t\t{Descripcion Categoria} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false) ~> ExtLTCategory\nExtLTProduct, ExtLTProductSubcategory join({Producto Sub Categoria ID} == {Subcategoria Producto ID},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSubcategory\nJoinSubcategory, ExtLTCategory join(ExtLTProductSubcategory@{Categoria Producto ID} == ExtLTCategory@{Categoria Producto ID},\n\tjoinType:'left',\n\tbroadcast: 'both')~> JoinCategory\nJoinCategory select(mapColumn(\n\t\t{Producto ID},\n\t\t{Numero Producto},\n\t\t{Producto Sub Categoria ID},\n\t\t{Nombre Producto},\n\t\t{Subcategoria Producto ID},\n\t\t{Categoria Producto ID} = ExtLTProductSubcategory@{Categoria Producto ID},\n\t\t{Descripcion Subcategoria},\n\t\t{Categoria Producto ID} = ExtLTCategory@{Categoria Producto ID},\n\t\t{Descripcion Categoria}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 keyGenerate(output(Pk_Producto as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tPK_Producto as integer,\n\t\tProducto_ID as integer,\n\t\tDescripcion_Subcategoria as string,\n\t\tNumero_Producto as string,\n\t\tCategoria_ID as string,\n\t\tNombre_Producto as string,\n\t\tDescripcion_Categoria as string,\n\t\tSubcategoria_ID as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['delete from DIM_Producto'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tPK_Producto = Pk_Producto,\n\t\tProducto_ID = {Producto ID},\n\t\tDescripcion_Subcategoria = {Descripcion Subcategoria},\n\t\tNumero_Producto = {Numero Producto},\n\t\tCategoria_ID = {Categoria Producto ID},\n\t\tNombre_Producto = {Nombre Producto},\n\t\tDescripcion_Categoria = {Descripcion Categoria},\n\t\tSubcategoria_ID = {Subcategoria Producto ID}\n\t)) ~> AlmacenarProducto"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LT_productos')]",
				"[concat(variables('factoryId'), '/datasets/LT_productos_sub_categoria')]",
				"[concat(variables('factoryId'), '/datasets/LT_productos_categoria')]",
				"[concat(variables('factoryId'), '/datasets/DimProducto')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Target_Workflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "db_target_region",
								"type": "DatasetReference"
							},
							"name": "ExtTargetTable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimMetas",
								"type": "DatasetReference"
							},
							"name": "AlmacenarMetasDWH"
						},
						{
							"dataset": {
								"referenceName": "OrphanMetas",
								"type": "DatasetReference"
							},
							"name": "Orphans"
						}
					],
					"transformations": [
						{
							"name": "AgregarSurrogateKey"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Filter2"
						}
					],
					"script": "source(output(\n\t\t{Año} as integer,\n\t\tMes as integer,\n\t\t{Region ID} as integer,\n\t\tTarget as decimal(18,5)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false) ~> ExtTargetTable\nExtTargetTable keyGenerate(output(PK_Metas as long),\n\tstartAt: 1L) ~> AgregarSurrogateKey\nAgregarSurrogateKey filter(!isNull({Año}) && !isNull(Mes) && !isNull({Region ID}) && !isNull(Target) && !isNull(PK_Metas)) ~> Filter1\nAgregarSurrogateKey filter(isNull({Año}) || isNull(Mes) || isNull({Region ID}) || isNull(Target) || isNull(PK_Metas)) ~> Filter2\nFilter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tPK_Meta as integer,\n\t\t{Año} as integer,\n\t\tMes as integer,\n\t\tRegion_ID as integer,\n\t\tTARGET as decimal(18,5)\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['Truncate Table DIM_Metas'],\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tPK_Meta = PK_Metas,\n\t\t{Año},\n\t\tMes,\n\t\tRegion_ID = {Region ID},\n\t\tTARGET = Target\n\t)) ~> AlmacenarMetasDWH\nFilter2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tPK_Meta as string,\n\t\t{Año} as string,\n\t\tMes as string,\n\t\tRegion_ID as string,\n\t\tTARGET as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['delete from Orphan_Metas;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tPK_Meta = PK_Metas,\n\t\t{Año},\n\t\tMes,\n\t\tRegion_ID = {Region ID},\n\t\tTARGET = Target\n\t)) ~> Orphans"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/db_target_region')]",
				"[concat(variables('factoryId'), '/datasets/DimMetas')]",
				"[concat(variables('factoryId'), '/datasets/OrphanMetas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OrphanDetalleOrdenes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dimensionality",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Garbage"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Detalle Orden",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "orphan_Detalle_de_ordenes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dimensionality')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OrphanCliente')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dimensionality",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Garbage"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PK_Cliente",
						"type": "varchar"
					},
					{
						"name": "Cliente_ID",
						"type": "varchar"
					},
					{
						"name": "Nombre",
						"type": "varchar"
					},
					{
						"name": "Apellido",
						"type": "varchar"
					},
					{
						"name": "Segmento",
						"type": "varchar"
					},
					{
						"name": "Pais",
						"type": "varchar"
					},
					{
						"name": "Ciudad",
						"type": "varchar"
					},
					{
						"name": "Estado",
						"type": "varchar"
					},
					{
						"name": "Region",
						"type": "varchar"
					},
					{
						"name": "Codigo Postal",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orphan_Cliente"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dimensionality')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OrphanMetas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dimensionality",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Garbage"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PK_Meta",
						"type": "varchar"
					},
					{
						"name": "Año",
						"type": "varchar"
					},
					{
						"name": "Mes",
						"type": "varchar"
					},
					{
						"name": "Region_ID",
						"type": "varchar"
					},
					{
						"name": "TARGET",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orphan_Metas"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dimensionality')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OrphanProducto')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dimensionality",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Garbage"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PK_Producto",
						"type": "varchar"
					},
					{
						"name": "Producto_ID",
						"type": "varchar"
					},
					{
						"name": "Descripcion_Subcategoria",
						"type": "varchar"
					},
					{
						"name": "Numero_Producto",
						"type": "varchar"
					},
					{
						"name": "Categoria_ID",
						"type": "varchar"
					},
					{
						"name": "Nombre_Producto",
						"type": "varchar"
					},
					{
						"name": "Descripcion_Categoria",
						"type": "varchar"
					},
					{
						"name": "Subcategoria_ID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orphan_Producto"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dimensionality')]"
			]
		}
	]
}