{
	"name": "Detalledeordenes_workflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "LTDetalleOrdenes",
						"type": "DatasetReference"
					},
					"name": "ExTLdetallesdeordenes"
				},
				{
					"dataset": {
						"referenceName": "DimProducto",
						"type": "DatasetReference"
					},
					"name": "Producto"
				},
				{
					"dataset": {
						"referenceName": "FactOrdenes",
						"type": "DatasetReference"
					},
					"name": "Ordenes"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimDetalleOrdenes",
						"type": "DatasetReference"
					},
					"name": "Almacenarproducto"
				},
				{
					"dataset": {
						"referenceName": "OrphanDetalleOrdenes",
						"type": "DatasetReference"
					},
					"name": "Orphans"
				}
			],
			"transformations": [
				{
					"name": "SurrogateKey1"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "Filter2"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Join2"
				},
				{
					"name": "Select2"
				},
				{
					"name": "Select3"
				}
			],
			"script": "source(output(\n\t\t{Detalle Orden} as integer,\n\t\t{Numero Orden} as string,\n\t\t{Producto ID} as integer,\n\t\t{Linea Total} as double,\n\t\tCantidad as integer,\n\t\tDescuento as double,\n\t\t{Precio Unitario} as double,\n\t\tGanancia as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tlimit: 100,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ExTLdetallesdeordenes\nsource(output(\n\t\tPK_Producto as integer,\n\t\tProducto_ID as integer,\n\t\tDescripcion_Subcategoria as string,\n\t\tNumero_Producto as string,\n\t\tCategoria_ID as string,\n\t\tNombre_Producto as string,\n\t\tDescripcion_Categoria as string,\n\t\tSubcategoria_ID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Producto\nsource(output(\n\t\tPK_Order as integer,\n\t\tnum_order as integer,\n\t\tfec_orden as date,\n\t\tfec_envio as date,\n\t\timp_subtotal as decimal(18,2),\n\t\tid_modo as integer,\n\t\tmodo_envio as string,\n\t\tID_Tipo_envio as integer,\n\t\tdescripcion_envio as string,\n\t\tRegion_ID as integer,\n\t\tRegion_descripcion as string,\n\t\tDetalle_Region as string,\n\t\tPK_Cliente as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Ordenes\nSelect3 keyGenerate(output(PK_detalledeordenes as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 filter(!isNull(PK_Producto) && !isNull(PK_Order) && (Cantidad>0 && !isNull(Cantidad))) ~> Filter1\nSurrogateKey1 filter(!isNull(PK_Producto) && !isNull(PK_Order) && (Cantidad>0 && !isNull(Cantidad))) ~> Filter2\nExTLdetallesdeordenes derive(Precio_Total = {Precio Unitario}*Cantidad) ~> DerivedColumn1\nDerivedColumn1, Select1 join({Producto ID} == Producto_ID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nProducto select(mapColumn(\n\t\tPK_Producto,\n\t\tProducto_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nJoin1, Select2 join({Numero Orden} == ERROR_FUNCTION(''),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nOrdenes select(mapColumn(\n\t\tPK_Order,\n\t\tnum_order\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nJoin2 select(mapColumn(\n\t\t{Detalle Orden},\n\t\t{Producto ID},\n\t\t{Linea Total},\n\t\tCantidad,\n\t\tDescuento,\n\t\t{Precio Unitario},\n\t\tGanancia,\n\t\tPrecio_Total,\n\t\tPK_Producto,\n\t\tPK_Order\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nFilter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tinput(\n\t\tPK_DetalleOrden as integer,\n\t\tPK_Order as integer,\n\t\tDetalle_Orden as string,\n\t\tLinea_Total as double,\n\t\tCantidad as decimal(18,5),\n\t\tDescuento as decimal(5,5),\n\t\tPrecio_Unitario as decimal(18,5),\n\t\tPrecio_Total as decimal(18,5),\n\t\tGanancia as decimal(18,5),\n\t\tPK_Producto as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['Delete from DIM_detalle_ordenes;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tPK_DetalleOrden = PK_detalledeordenes,\n\t\tPK_Order,\n\t\tDetalle_Orden = {Detalle Orden},\n\t\tLinea_Total = {Linea Total},\n\t\tCantidad,\n\t\tDescuento,\n\t\tPrecio_Unitario = Precio_Total,\n\t\tPrecio_Total,\n\t\tGanancia,\n\t\tPK_Producto\n\t)) ~> Almacenarproducto\nFilter2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tPK_DetalleOrden as string,\n\t\tPK_Order as string,\n\t\tDetalle_Orden as string,\n\t\tLinea_Total as string,\n\t\tCantidad as string,\n\t\tDescuento as string,\n\t\tPrecio_Unitario as string,\n\t\tPrecio_Total as string,\n\t\tGanancia as string,\n\t\tPK_Producto as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> Orphans"
		}
	}
}